//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("BoardSportsModel", "FK_Rigs_Boards", "Boards", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BoardSports.DAL.Board), "Rigs", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BoardSports.DAL.Rig), true)]
[assembly: EdmRelationshipAttribute("BoardSportsModel", "FK_Rigs_Booms", "Booms", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BoardSports.DAL.Boom), "Rigs", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BoardSports.DAL.Rig), true)]
[assembly: EdmRelationshipAttribute("BoardSportsModel", "FK_Rigs_Fins", "Fins", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BoardSports.DAL.Fin), "Rigs", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BoardSports.DAL.Rig), true)]
[assembly: EdmRelationshipAttribute("BoardSportsModel", "FK_Rigs_Masts", "Masts", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BoardSports.DAL.Mast), "Rigs", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BoardSports.DAL.Rig), true)]
[assembly: EdmRelationshipAttribute("BoardSportsModel", "FK_Rigs_Sails", "Sails", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BoardSports.DAL.Sail), "Rigs", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BoardSports.DAL.Rig), true)]
[assembly: EdmRelationshipAttribute("BoardSportsModel", "FK_Rigs_Venues", "Venues", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BoardSports.DAL.Venue), "Rigs", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BoardSports.DAL.Rig), true)]
[assembly: EdmRelationshipAttribute("BoardSportsModel", "FK_Sessions_Rigs", "Rigs", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BoardSports.DAL.Rig), "Sessions", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BoardSports.DAL.Session), true)]

#endregion

namespace BoardSports.DAL
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class BoardSportsDevEntity : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new BoardSportsDevEntity object using the connection string found in the 'BoardSportsDevEntity' section of the application configuration file.
        /// </summary>
        public BoardSportsDevEntity() : base("name=BoardSportsDevEntity", "BoardSportsDevEntity")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new BoardSportsDevEntity object.
        /// </summary>
        public BoardSportsDevEntity(string connectionString) : base(connectionString, "BoardSportsDevEntity")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new BoardSportsDevEntity object.
        /// </summary>
        public BoardSportsDevEntity(EntityConnection connection) : base(connection, "BoardSportsDevEntity")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Board> Boards
        {
            get
            {
                if ((_Boards == null))
                {
                    _Boards = base.CreateObjectSet<Board>("Boards");
                }
                return _Boards;
            }
        }
        private ObjectSet<Board> _Boards;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Boom> Booms
        {
            get
            {
                if ((_Booms == null))
                {
                    _Booms = base.CreateObjectSet<Boom>("Booms");
                }
                return _Booms;
            }
        }
        private ObjectSet<Boom> _Booms;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Fin> Fins
        {
            get
            {
                if ((_Fins == null))
                {
                    _Fins = base.CreateObjectSet<Fin>("Fins");
                }
                return _Fins;
            }
        }
        private ObjectSet<Fin> _Fins;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<KiteBoard> KiteBoards
        {
            get
            {
                if ((_KiteBoards == null))
                {
                    _KiteBoards = base.CreateObjectSet<KiteBoard>("KiteBoards");
                }
                return _KiteBoards;
            }
        }
        private ObjectSet<KiteBoard> _KiteBoards;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Kite> Kites
        {
            get
            {
                if ((_Kites == null))
                {
                    _Kites = base.CreateObjectSet<Kite>("Kites");
                }
                return _Kites;
            }
        }
        private ObjectSet<Kite> _Kites;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Mast> Masts
        {
            get
            {
                if ((_Masts == null))
                {
                    _Masts = base.CreateObjectSet<Mast>("Masts");
                }
                return _Masts;
            }
        }
        private ObjectSet<Mast> _Masts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Rig> Rigs
        {
            get
            {
                if ((_Rigs == null))
                {
                    _Rigs = base.CreateObjectSet<Rig>("Rigs");
                }
                return _Rigs;
            }
        }
        private ObjectSet<Rig> _Rigs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Sail> Sails
        {
            get
            {
                if ((_Sails == null))
                {
                    _Sails = base.CreateObjectSet<Sail>("Sails");
                }
                return _Sails;
            }
        }
        private ObjectSet<Sail> _Sails;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Session> Sessions
        {
            get
            {
                if ((_Sessions == null))
                {
                    _Sessions = base.CreateObjectSet<Session>("Sessions");
                }
                return _Sessions;
            }
        }
        private ObjectSet<Session> _Sessions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Snowboard> Snowboards
        {
            get
            {
                if ((_Snowboards == null))
                {
                    _Snowboards = base.CreateObjectSet<Snowboard>("Snowboards");
                }
                return _Snowboards;
            }
        }
        private ObjectSet<Snowboard> _Snowboards;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Venue> Venues
        {
            get
            {
                if ((_Venues == null))
                {
                    _Venues = base.CreateObjectSet<Venue>("Venues");
                }
                return _Venues;
            }
        }
        private ObjectSet<Venue> _Venues;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Boards EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBoards(Board board)
        {
            base.AddObject("Boards", board);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Booms EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBooms(Boom boom)
        {
            base.AddObject("Booms", boom);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Fins EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFins(Fin fin)
        {
            base.AddObject("Fins", fin);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the KiteBoards EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToKiteBoards(KiteBoard kiteBoard)
        {
            base.AddObject("KiteBoards", kiteBoard);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Kites EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToKites(Kite kite)
        {
            base.AddObject("Kites", kite);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Masts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMasts(Mast mast)
        {
            base.AddObject("Masts", mast);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Rigs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRigs(Rig rig)
        {
            base.AddObject("Rigs", rig);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Sails EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSails(Sail sail)
        {
            base.AddObject("Sails", sail);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Sessions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSessions(Session session)
        {
            base.AddObject("Sessions", session);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Snowboards EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSnowboards(Snowboard snowboard)
        {
            base.AddObject("Snowboards", snowboard);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Venues EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToVenues(Venue venue)
        {
            base.AddObject("Venues", venue);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BoardSportsModel", Name="Board")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Board : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Board object.
        /// </summary>
        /// <param name="boardId">Initial value of the BoardId property.</param>
        /// <param name="boardName">Initial value of the BoardName property.</param>
        /// <param name="manufacturer">Initial value of the Manufacturer property.</param>
        public static Board CreateBoard(global::System.Int32 boardId, global::System.String boardName, global::System.String manufacturer)
        {
            Board board = new Board();
            board.BoardId = boardId;
            board.BoardName = boardName;
            board.Manufacturer = manufacturer;
            return board;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BoardId
        {
            get
            {
                return _BoardId;
            }
            set
            {
                if (_BoardId != value)
                {
                    OnBoardIdChanging(value);
                    ReportPropertyChanging("BoardId");
                    _BoardId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("BoardId");
                    OnBoardIdChanged();
                }
            }
        }
        private global::System.Int32 _BoardId;
        partial void OnBoardIdChanging(global::System.Int32 value);
        partial void OnBoardIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String BoardName
        {
            get
            {
                return _BoardName;
            }
            set
            {
                OnBoardNameChanging(value);
                ReportPropertyChanging("BoardName");
                _BoardName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("BoardName");
                OnBoardNameChanged();
            }
        }
        private global::System.String _BoardName;
        partial void OnBoardNameChanging(global::System.String value);
        partial void OnBoardNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Manufacturer
        {
            get
            {
                return _Manufacturer;
            }
            set
            {
                OnManufacturerChanging(value);
                ReportPropertyChanging("Manufacturer");
                _Manufacturer = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Manufacturer");
                OnManufacturerChanged();
            }
        }
        private global::System.String _Manufacturer;
        partial void OnManufacturerChanging(global::System.String value);
        partial void OnManufacturerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Length
        {
            get
            {
                return _Length;
            }
            set
            {
                OnLengthChanging(value);
                ReportPropertyChanging("Length");
                _Length = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Length");
                OnLengthChanged();
            }
        }
        private Nullable<global::System.Decimal> _Length;
        partial void OnLengthChanging(Nullable<global::System.Decimal> value);
        partial void OnLengthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Width
        {
            get
            {
                return _Width;
            }
            set
            {
                OnWidthChanging(value);
                ReportPropertyChanging("Width");
                _Width = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Width");
                OnWidthChanged();
            }
        }
        private Nullable<global::System.Decimal> _Width;
        partial void OnWidthChanging(Nullable<global::System.Decimal> value);
        partial void OnWidthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Volume
        {
            get
            {
                return _Volume;
            }
            set
            {
                OnVolumeChanging(value);
                ReportPropertyChanging("Volume");
                _Volume = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Volume");
                OnVolumeChanged();
            }
        }
        private Nullable<global::System.Int32> _Volume;
        partial void OnVolumeChanging(Nullable<global::System.Int32> value);
        partial void OnVolumeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BoardType
        {
            get
            {
                return _BoardType;
            }
            set
            {
                OnBoardTypeChanging(value);
                ReportPropertyChanging("BoardType");
                _BoardType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BoardType");
                OnBoardTypeChanged();
            }
        }
        private global::System.String _BoardType;
        partial void OnBoardTypeChanging(global::System.String value);
        partial void OnBoardTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> PurchaseDate
        {
            get
            {
                return _PurchaseDate;
            }
            set
            {
                OnPurchaseDateChanging(value);
                ReportPropertyChanging("PurchaseDate");
                _PurchaseDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PurchaseDate");
                OnPurchaseDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _PurchaseDate;
        partial void OnPurchaseDateChanging(Nullable<global::System.DateTime> value);
        partial void OnPurchaseDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> PurchasePrice
        {
            get
            {
                return _PurchasePrice;
            }
            set
            {
                OnPurchasePriceChanging(value);
                ReportPropertyChanging("PurchasePrice");
                _PurchasePrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PurchasePrice");
                OnPurchasePriceChanged();
            }
        }
        private Nullable<global::System.Decimal> _PurchasePrice;
        partial void OnPurchasePriceChanging(Nullable<global::System.Decimal> value);
        partial void OnPurchasePriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> EstimatedValue
        {
            get
            {
                return _EstimatedValue;
            }
            set
            {
                OnEstimatedValueChanging(value);
                ReportPropertyChanging("EstimatedValue");
                _EstimatedValue = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EstimatedValue");
                OnEstimatedValueChanged();
            }
        }
        private Nullable<global::System.Decimal> _EstimatedValue;
        partial void OnEstimatedValueChanging(Nullable<global::System.Decimal> value);
        partial void OnEstimatedValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PictureLocation
        {
            get
            {
                return _PictureLocation;
            }
            set
            {
                OnPictureLocationChanging(value);
                ReportPropertyChanging("PictureLocation");
                _PictureLocation = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PictureLocation");
                OnPictureLocationChanged();
            }
        }
        private global::System.String _PictureLocation;
        partial void OnPictureLocationChanging(global::System.String value);
        partial void OnPictureLocationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> YearManufactured
        {
            get
            {
                return _YearManufactured;
            }
            set
            {
                OnYearManufacturedChanging(value);
                ReportPropertyChanging("YearManufactured");
                _YearManufactured = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("YearManufactured");
                OnYearManufacturedChanged();
            }
        }
        private Nullable<global::System.Int32> _YearManufactured;
        partial void OnYearManufacturedChanging(Nullable<global::System.Int32> value);
        partial void OnYearManufacturedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BoardSportsModel", "FK_Rigs_Boards", "Rigs")]
        public EntityCollection<Rig> Rigs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Rig>("BoardSportsModel.FK_Rigs_Boards", "Rigs");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Rig>("BoardSportsModel.FK_Rigs_Boards", "Rigs", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BoardSportsModel", Name="Boom")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Boom : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Boom object.
        /// </summary>
        /// <param name="boomId">Initial value of the BoomId property.</param>
        /// <param name="boomName">Initial value of the BoomName property.</param>
        public static Boom CreateBoom(global::System.Int32 boomId, global::System.String boomName)
        {
            Boom boom = new Boom();
            boom.BoomId = boomId;
            boom.BoomName = boomName;
            return boom;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BoomId
        {
            get
            {
                return _BoomId;
            }
            set
            {
                if (_BoomId != value)
                {
                    OnBoomIdChanging(value);
                    ReportPropertyChanging("BoomId");
                    _BoomId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("BoomId");
                    OnBoomIdChanged();
                }
            }
        }
        private global::System.Int32 _BoomId;
        partial void OnBoomIdChanging(global::System.Int32 value);
        partial void OnBoomIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String BoomName
        {
            get
            {
                return _BoomName;
            }
            set
            {
                OnBoomNameChanging(value);
                ReportPropertyChanging("BoomName");
                _BoomName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("BoomName");
                OnBoomNameChanged();
            }
        }
        private global::System.String _BoomName;
        partial void OnBoomNameChanging(global::System.String value);
        partial void OnBoomNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Manufacturer
        {
            get
            {
                return _Manufacturer;
            }
            set
            {
                OnManufacturerChanging(value);
                ReportPropertyChanging("Manufacturer");
                _Manufacturer = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Manufacturer");
                OnManufacturerChanged();
            }
        }
        private global::System.String _Manufacturer;
        partial void OnManufacturerChanging(global::System.String value);
        partial void OnManufacturerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> MinLength
        {
            get
            {
                return _MinLength;
            }
            set
            {
                OnMinLengthChanging(value);
                ReportPropertyChanging("MinLength");
                _MinLength = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MinLength");
                OnMinLengthChanged();
            }
        }
        private Nullable<global::System.Int32> _MinLength;
        partial void OnMinLengthChanging(Nullable<global::System.Int32> value);
        partial void OnMinLengthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> MaxLength
        {
            get
            {
                return _MaxLength;
            }
            set
            {
                OnMaxLengthChanging(value);
                ReportPropertyChanging("MaxLength");
                _MaxLength = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MaxLength");
                OnMaxLengthChanged();
            }
        }
        private Nullable<global::System.Int32> _MaxLength;
        partial void OnMaxLengthChanging(Nullable<global::System.Int32> value);
        partial void OnMaxLengthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> PurchaseDate
        {
            get
            {
                return _PurchaseDate;
            }
            set
            {
                OnPurchaseDateChanging(value);
                ReportPropertyChanging("PurchaseDate");
                _PurchaseDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PurchaseDate");
                OnPurchaseDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _PurchaseDate;
        partial void OnPurchaseDateChanging(Nullable<global::System.DateTime> value);
        partial void OnPurchaseDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> PurchasePrice
        {
            get
            {
                return _PurchasePrice;
            }
            set
            {
                OnPurchasePriceChanging(value);
                ReportPropertyChanging("PurchasePrice");
                _PurchasePrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PurchasePrice");
                OnPurchasePriceChanged();
            }
        }
        private Nullable<global::System.Decimal> _PurchasePrice;
        partial void OnPurchasePriceChanging(Nullable<global::System.Decimal> value);
        partial void OnPurchasePriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> EstimatedValue
        {
            get
            {
                return _EstimatedValue;
            }
            set
            {
                OnEstimatedValueChanging(value);
                ReportPropertyChanging("EstimatedValue");
                _EstimatedValue = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EstimatedValue");
                OnEstimatedValueChanged();
            }
        }
        private Nullable<global::System.Decimal> _EstimatedValue;
        partial void OnEstimatedValueChanging(Nullable<global::System.Decimal> value);
        partial void OnEstimatedValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PictureLocation
        {
            get
            {
                return _PictureLocation;
            }
            set
            {
                OnPictureLocationChanging(value);
                ReportPropertyChanging("PictureLocation");
                _PictureLocation = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PictureLocation");
                OnPictureLocationChanged();
            }
        }
        private global::System.String _PictureLocation;
        partial void OnPictureLocationChanging(global::System.String value);
        partial void OnPictureLocationChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BoardSportsModel", "FK_Rigs_Booms", "Rigs")]
        public EntityCollection<Rig> Rigs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Rig>("BoardSportsModel.FK_Rigs_Booms", "Rigs");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Rig>("BoardSportsModel.FK_Rigs_Booms", "Rigs", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BoardSportsModel", Name="Fin")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Fin : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Fin object.
        /// </summary>
        /// <param name="finId">Initial value of the FinId property.</param>
        /// <param name="finType">Initial value of the FinType property.</param>
        public static Fin CreateFin(global::System.Int32 finId, global::System.String finType)
        {
            Fin fin = new Fin();
            fin.FinId = finId;
            fin.FinType = finType;
            return fin;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FinId
        {
            get
            {
                return _FinId;
            }
            set
            {
                if (_FinId != value)
                {
                    OnFinIdChanging(value);
                    ReportPropertyChanging("FinId");
                    _FinId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FinId");
                    OnFinIdChanged();
                }
            }
        }
        private global::System.Int32 _FinId;
        partial void OnFinIdChanging(global::System.Int32 value);
        partial void OnFinIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FinStyle
        {
            get
            {
                return _FinStyle;
            }
            set
            {
                OnFinStyleChanging(value);
                ReportPropertyChanging("FinStyle");
                _FinStyle = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FinStyle");
                OnFinStyleChanged();
            }
        }
        private global::System.String _FinStyle;
        partial void OnFinStyleChanging(global::System.String value);
        partial void OnFinStyleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FinType
        {
            get
            {
                return _FinType;
            }
            set
            {
                OnFinTypeChanging(value);
                ReportPropertyChanging("FinType");
                _FinType = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FinType");
                OnFinTypeChanged();
            }
        }
        private global::System.String _FinType;
        partial void OnFinTypeChanging(global::System.String value);
        partial void OnFinTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Length
        {
            get
            {
                return _Length;
            }
            set
            {
                OnLengthChanging(value);
                ReportPropertyChanging("Length");
                _Length = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Length");
                OnLengthChanged();
            }
        }
        private Nullable<global::System.Int32> _Length;
        partial void OnLengthChanging(Nullable<global::System.Int32> value);
        partial void OnLengthChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BoardSportsModel", "FK_Rigs_Fins", "Rigs")]
        public EntityCollection<Rig> Rigs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Rig>("BoardSportsModel.FK_Rigs_Fins", "Rigs");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Rig>("BoardSportsModel.FK_Rigs_Fins", "Rigs", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BoardSportsModel", Name="Kite")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Kite : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Kite object.
        /// </summary>
        /// <param name="kiteId">Initial value of the KiteId property.</param>
        /// <param name="kiteName">Initial value of the KiteName property.</param>
        public static Kite CreateKite(global::System.Int32 kiteId, global::System.String kiteName)
        {
            Kite kite = new Kite();
            kite.KiteId = kiteId;
            kite.KiteName = kiteName;
            return kite;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 KiteId
        {
            get
            {
                return _KiteId;
            }
            set
            {
                if (_KiteId != value)
                {
                    OnKiteIdChanging(value);
                    ReportPropertyChanging("KiteId");
                    _KiteId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("KiteId");
                    OnKiteIdChanged();
                }
            }
        }
        private global::System.Int32 _KiteId;
        partial void OnKiteIdChanging(global::System.Int32 value);
        partial void OnKiteIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String KiteName
        {
            get
            {
                return _KiteName;
            }
            set
            {
                OnKiteNameChanging(value);
                ReportPropertyChanging("KiteName");
                _KiteName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("KiteName");
                OnKiteNameChanged();
            }
        }
        private global::System.String _KiteName;
        partial void OnKiteNameChanging(global::System.String value);
        partial void OnKiteNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Manufacturer
        {
            get
            {
                return _Manufacturer;
            }
            set
            {
                OnManufacturerChanging(value);
                ReportPropertyChanging("Manufacturer");
                _Manufacturer = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Manufacturer");
                OnManufacturerChanged();
            }
        }
        private global::System.String _Manufacturer;
        partial void OnManufacturerChanging(global::System.String value);
        partial void OnManufacturerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Byte> Size
        {
            get
            {
                return _Size;
            }
            set
            {
                OnSizeChanging(value);
                ReportPropertyChanging("Size");
                _Size = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Size");
                OnSizeChanged();
            }
        }
        private Nullable<global::System.Byte> _Size;
        partial void OnSizeChanging(Nullable<global::System.Byte> value);
        partial void OnSizeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Byte> NumberOfLines
        {
            get
            {
                return _NumberOfLines;
            }
            set
            {
                OnNumberOfLinesChanging(value);
                ReportPropertyChanging("NumberOfLines");
                _NumberOfLines = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NumberOfLines");
                OnNumberOfLinesChanged();
            }
        }
        private Nullable<global::System.Byte> _NumberOfLines;
        partial void OnNumberOfLinesChanging(Nullable<global::System.Byte> value);
        partial void OnNumberOfLinesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PictureLocation
        {
            get
            {
                return _PictureLocation;
            }
            set
            {
                OnPictureLocationChanging(value);
                ReportPropertyChanging("PictureLocation");
                _PictureLocation = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PictureLocation");
                OnPictureLocationChanged();
            }
        }
        private global::System.String _PictureLocation;
        partial void OnPictureLocationChanging(global::System.String value);
        partial void OnPictureLocationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> EstimatedValue
        {
            get
            {
                return _EstimatedValue;
            }
            set
            {
                OnEstimatedValueChanging(value);
                ReportPropertyChanging("EstimatedValue");
                _EstimatedValue = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EstimatedValue");
                OnEstimatedValueChanged();
            }
        }
        private Nullable<global::System.Decimal> _EstimatedValue;
        partial void OnEstimatedValueChanging(Nullable<global::System.Decimal> value);
        partial void OnEstimatedValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> PurchasePrice
        {
            get
            {
                return _PurchasePrice;
            }
            set
            {
                OnPurchasePriceChanging(value);
                ReportPropertyChanging("PurchasePrice");
                _PurchasePrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PurchasePrice");
                OnPurchasePriceChanged();
            }
        }
        private Nullable<global::System.Decimal> _PurchasePrice;
        partial void OnPurchasePriceChanging(Nullable<global::System.Decimal> value);
        partial void OnPurchasePriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> PurchaseDate
        {
            get
            {
                return _PurchaseDate;
            }
            set
            {
                OnPurchaseDateChanging(value);
                ReportPropertyChanging("PurchaseDate");
                _PurchaseDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PurchaseDate");
                OnPurchaseDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _PurchaseDate;
        partial void OnPurchaseDateChanging(Nullable<global::System.DateTime> value);
        partial void OnPurchaseDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> YearManufactured
        {
            get
            {
                return _YearManufactured;
            }
            set
            {
                OnYearManufacturedChanging(value);
                ReportPropertyChanging("YearManufactured");
                _YearManufactured = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("YearManufactured");
                OnYearManufacturedChanged();
            }
        }
        private Nullable<global::System.Int32> _YearManufactured;
        partial void OnYearManufacturedChanging(Nullable<global::System.Int32> value);
        partial void OnYearManufacturedChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BoardSportsModel", Name="KiteBoard")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class KiteBoard : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new KiteBoard object.
        /// </summary>
        /// <param name="kiteboardId">Initial value of the KiteboardId property.</param>
        public static KiteBoard CreateKiteBoard(global::System.Int32 kiteboardId)
        {
            KiteBoard kiteBoard = new KiteBoard();
            kiteBoard.KiteboardId = kiteboardId;
            return kiteBoard;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 KiteboardId
        {
            get
            {
                return _KiteboardId;
            }
            set
            {
                if (_KiteboardId != value)
                {
                    OnKiteboardIdChanging(value);
                    ReportPropertyChanging("KiteboardId");
                    _KiteboardId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("KiteboardId");
                    OnKiteboardIdChanged();
                }
            }
        }
        private global::System.Int32 _KiteboardId;
        partial void OnKiteboardIdChanging(global::System.Int32 value);
        partial void OnKiteboardIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String KiteboardName
        {
            get
            {
                return _KiteboardName;
            }
            set
            {
                OnKiteboardNameChanging(value);
                ReportPropertyChanging("KiteboardName");
                _KiteboardName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("KiteboardName");
                OnKiteboardNameChanged();
            }
        }
        private global::System.String _KiteboardName;
        partial void OnKiteboardNameChanging(global::System.String value);
        partial void OnKiteboardNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Manufacturer
        {
            get
            {
                return _Manufacturer;
            }
            set
            {
                OnManufacturerChanging(value);
                ReportPropertyChanging("Manufacturer");
                _Manufacturer = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Manufacturer");
                OnManufacturerChanged();
            }
        }
        private global::System.String _Manufacturer;
        partial void OnManufacturerChanging(global::System.String value);
        partial void OnManufacturerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> PurchasePrice
        {
            get
            {
                return _PurchasePrice;
            }
            set
            {
                OnPurchasePriceChanging(value);
                ReportPropertyChanging("PurchasePrice");
                _PurchasePrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PurchasePrice");
                OnPurchasePriceChanged();
            }
        }
        private Nullable<global::System.Decimal> _PurchasePrice;
        partial void OnPurchasePriceChanging(Nullable<global::System.Decimal> value);
        partial void OnPurchasePriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> PurchaseDate
        {
            get
            {
                return _PurchaseDate;
            }
            set
            {
                OnPurchaseDateChanging(value);
                ReportPropertyChanging("PurchaseDate");
                _PurchaseDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PurchaseDate");
                OnPurchaseDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _PurchaseDate;
        partial void OnPurchaseDateChanging(Nullable<global::System.DateTime> value);
        partial void OnPurchaseDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> YearManufactured
        {
            get
            {
                return _YearManufactured;
            }
            set
            {
                OnYearManufacturedChanging(value);
                ReportPropertyChanging("YearManufactured");
                _YearManufactured = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("YearManufactured");
                OnYearManufacturedChanged();
            }
        }
        private Nullable<global::System.Int32> _YearManufactured;
        partial void OnYearManufacturedChanging(Nullable<global::System.Int32> value);
        partial void OnYearManufacturedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Byte> Length
        {
            get
            {
                return _Length;
            }
            set
            {
                OnLengthChanging(value);
                ReportPropertyChanging("Length");
                _Length = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Length");
                OnLengthChanged();
            }
        }
        private Nullable<global::System.Byte> _Length;
        partial void OnLengthChanging(Nullable<global::System.Byte> value);
        partial void OnLengthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Byte> Width
        {
            get
            {
                return _Width;
            }
            set
            {
                OnWidthChanging(value);
                ReportPropertyChanging("Width");
                _Width = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Width");
                OnWidthChanged();
            }
        }
        private Nullable<global::System.Byte> _Width;
        partial void OnWidthChanging(Nullable<global::System.Byte> value);
        partial void OnWidthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PictureLocation
        {
            get
            {
                return _PictureLocation;
            }
            set
            {
                OnPictureLocationChanging(value);
                ReportPropertyChanging("PictureLocation");
                _PictureLocation = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PictureLocation");
                OnPictureLocationChanged();
            }
        }
        private global::System.String _PictureLocation;
        partial void OnPictureLocationChanging(global::System.String value);
        partial void OnPictureLocationChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BoardSportsModel", Name="Mast")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Mast : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Mast object.
        /// </summary>
        /// <param name="mastId">Initial value of the MastId property.</param>
        /// <param name="mastName">Initial value of the MastName property.</param>
        public static Mast CreateMast(global::System.Int32 mastId, global::System.String mastName)
        {
            Mast mast = new Mast();
            mast.MastId = mastId;
            mast.MastName = mastName;
            return mast;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MastId
        {
            get
            {
                return _MastId;
            }
            set
            {
                if (_MastId != value)
                {
                    OnMastIdChanging(value);
                    ReportPropertyChanging("MastId");
                    _MastId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MastId");
                    OnMastIdChanged();
                }
            }
        }
        private global::System.Int32 _MastId;
        partial void OnMastIdChanging(global::System.Int32 value);
        partial void OnMastIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MastName
        {
            get
            {
                return _MastName;
            }
            set
            {
                OnMastNameChanging(value);
                ReportPropertyChanging("MastName");
                _MastName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MastName");
                OnMastNameChanged();
            }
        }
        private global::System.String _MastName;
        partial void OnMastNameChanging(global::System.String value);
        partial void OnMastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Manufacturer
        {
            get
            {
                return _Manufacturer;
            }
            set
            {
                OnManufacturerChanging(value);
                ReportPropertyChanging("Manufacturer");
                _Manufacturer = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Manufacturer");
                OnManufacturerChanged();
            }
        }
        private global::System.String _Manufacturer;
        partial void OnManufacturerChanging(global::System.String value);
        partial void OnManufacturerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CarbonContent
        {
            get
            {
                return _CarbonContent;
            }
            set
            {
                OnCarbonContentChanging(value);
                ReportPropertyChanging("CarbonContent");
                _CarbonContent = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CarbonContent");
                OnCarbonContentChanged();
            }
        }
        private Nullable<global::System.Int32> _CarbonContent;
        partial void OnCarbonContentChanging(Nullable<global::System.Int32> value);
        partial void OnCarbonContentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> PurchaseDate
        {
            get
            {
                return _PurchaseDate;
            }
            set
            {
                OnPurchaseDateChanging(value);
                ReportPropertyChanging("PurchaseDate");
                _PurchaseDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PurchaseDate");
                OnPurchaseDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _PurchaseDate;
        partial void OnPurchaseDateChanging(Nullable<global::System.DateTime> value);
        partial void OnPurchaseDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> PurchasePrice
        {
            get
            {
                return _PurchasePrice;
            }
            set
            {
                OnPurchasePriceChanging(value);
                ReportPropertyChanging("PurchasePrice");
                _PurchasePrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PurchasePrice");
                OnPurchasePriceChanged();
            }
        }
        private Nullable<global::System.Decimal> _PurchasePrice;
        partial void OnPurchasePriceChanging(Nullable<global::System.Decimal> value);
        partial void OnPurchasePriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PurchaseStore
        {
            get
            {
                return _PurchaseStore;
            }
            set
            {
                OnPurchaseStoreChanging(value);
                ReportPropertyChanging("PurchaseStore");
                _PurchaseStore = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PurchaseStore");
                OnPurchaseStoreChanged();
            }
        }
        private global::System.String _PurchaseStore;
        partial void OnPurchaseStoreChanging(global::System.String value);
        partial void OnPurchaseStoreChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String YearManurfactured
        {
            get
            {
                return _YearManurfactured;
            }
            set
            {
                OnYearManurfacturedChanging(value);
                ReportPropertyChanging("YearManurfactured");
                _YearManurfactured = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("YearManurfactured");
                OnYearManurfacturedChanged();
            }
        }
        private global::System.String _YearManurfactured;
        partial void OnYearManurfacturedChanging(global::System.String value);
        partial void OnYearManurfacturedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BoardSportsModel", "FK_Rigs_Masts", "Rigs")]
        public EntityCollection<Rig> Rigs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Rig>("BoardSportsModel.FK_Rigs_Masts", "Rigs");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Rig>("BoardSportsModel.FK_Rigs_Masts", "Rigs", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BoardSportsModel", Name="Rig")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Rig : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Rig object.
        /// </summary>
        /// <param name="rigId">Initial value of the RigId property.</param>
        /// <param name="venueId">Initial value of the VenueId property.</param>
        /// <param name="boardId">Initial value of the BoardId property.</param>
        /// <param name="sailId">Initial value of the SailId property.</param>
        /// <param name="boomId">Initial value of the BoomId property.</param>
        /// <param name="finId">Initial value of the FinId property.</param>
        public static Rig CreateRig(global::System.Int32 rigId, global::System.Int32 venueId, global::System.Int32 boardId, global::System.Int32 sailId, global::System.Int32 boomId, global::System.Int32 finId)
        {
            Rig rig = new Rig();
            rig.RigId = rigId;
            rig.VenueId = venueId;
            rig.BoardId = boardId;
            rig.SailId = sailId;
            rig.BoomId = boomId;
            rig.FinId = finId;
            return rig;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RigId
        {
            get
            {
                return _RigId;
            }
            set
            {
                if (_RigId != value)
                {
                    OnRigIdChanging(value);
                    ReportPropertyChanging("RigId");
                    _RigId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RigId");
                    OnRigIdChanged();
                }
            }
        }
        private global::System.Int32 _RigId;
        partial void OnRigIdChanging(global::System.Int32 value);
        partial void OnRigIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RigDate
        {
            get
            {
                return _RigDate;
            }
            set
            {
                OnRigDateChanging(value);
                ReportPropertyChanging("RigDate");
                _RigDate = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RigDate");
                OnRigDateChanged();
            }
        }
        private global::System.String _RigDate;
        partial void OnRigDateChanging(global::System.String value);
        partial void OnRigDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RigType
        {
            get
            {
                return _RigType;
            }
            set
            {
                OnRigTypeChanging(value);
                ReportPropertyChanging("RigType");
                _RigType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RigType");
                OnRigTypeChanged();
            }
        }
        private global::System.String _RigType;
        partial void OnRigTypeChanging(global::System.String value);
        partial void OnRigTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 VenueId
        {
            get
            {
                return _VenueId;
            }
            set
            {
                OnVenueIdChanging(value);
                ReportPropertyChanging("VenueId");
                _VenueId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("VenueId");
                OnVenueIdChanged();
            }
        }
        private global::System.Int32 _VenueId;
        partial void OnVenueIdChanging(global::System.Int32 value);
        partial void OnVenueIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BoardId
        {
            get
            {
                return _BoardId;
            }
            set
            {
                OnBoardIdChanging(value);
                ReportPropertyChanging("BoardId");
                _BoardId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BoardId");
                OnBoardIdChanged();
            }
        }
        private global::System.Int32 _BoardId;
        partial void OnBoardIdChanging(global::System.Int32 value);
        partial void OnBoardIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SailId
        {
            get
            {
                return _SailId;
            }
            set
            {
                OnSailIdChanging(value);
                ReportPropertyChanging("SailId");
                _SailId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SailId");
                OnSailIdChanged();
            }
        }
        private global::System.Int32 _SailId;
        partial void OnSailIdChanging(global::System.Int32 value);
        partial void OnSailIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BoomId
        {
            get
            {
                return _BoomId;
            }
            set
            {
                OnBoomIdChanging(value);
                ReportPropertyChanging("BoomId");
                _BoomId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BoomId");
                OnBoomIdChanged();
            }
        }
        private global::System.Int32 _BoomId;
        partial void OnBoomIdChanging(global::System.Int32 value);
        partial void OnBoomIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FinId
        {
            get
            {
                return _FinId;
            }
            set
            {
                OnFinIdChanging(value);
                ReportPropertyChanging("FinId");
                _FinId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FinId");
                OnFinIdChanged();
            }
        }
        private global::System.Int32 _FinId;
        partial void OnFinIdChanging(global::System.Int32 value);
        partial void OnFinIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> MastId
        {
            get
            {
                return _MastId;
            }
            set
            {
                OnMastIdChanging(value);
                ReportPropertyChanging("MastId");
                _MastId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MastId");
                OnMastIdChanged();
            }
        }
        private Nullable<global::System.Int32> _MastId;
        partial void OnMastIdChanging(Nullable<global::System.Int32> value);
        partial void OnMastIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> KiteId
        {
            get
            {
                return _KiteId;
            }
            set
            {
                OnKiteIdChanging(value);
                ReportPropertyChanging("KiteId");
                _KiteId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("KiteId");
                OnKiteIdChanged();
            }
        }
        private Nullable<global::System.Int32> _KiteId;
        partial void OnKiteIdChanging(Nullable<global::System.Int32> value);
        partial void OnKiteIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> KiteBoardId
        {
            get
            {
                return _KiteBoardId;
            }
            set
            {
                OnKiteBoardIdChanging(value);
                ReportPropertyChanging("KiteBoardId");
                _KiteBoardId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("KiteBoardId");
                OnKiteBoardIdChanged();
            }
        }
        private Nullable<global::System.Int32> _KiteBoardId;
        partial void OnKiteBoardIdChanging(Nullable<global::System.Int32> value);
        partial void OnKiteBoardIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BoardSportsModel", "FK_Rigs_Boards", "Boards")]
        public Board Board
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Board>("BoardSportsModel.FK_Rigs_Boards", "Boards").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Board>("BoardSportsModel.FK_Rigs_Boards", "Boards").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Board> BoardReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Board>("BoardSportsModel.FK_Rigs_Boards", "Boards");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Board>("BoardSportsModel.FK_Rigs_Boards", "Boards", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BoardSportsModel", "FK_Rigs_Booms", "Booms")]
        public Boom Boom
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Boom>("BoardSportsModel.FK_Rigs_Booms", "Booms").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Boom>("BoardSportsModel.FK_Rigs_Booms", "Booms").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Boom> BoomReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Boom>("BoardSportsModel.FK_Rigs_Booms", "Booms");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Boom>("BoardSportsModel.FK_Rigs_Booms", "Booms", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BoardSportsModel", "FK_Rigs_Fins", "Fins")]
        public Fin Fin
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Fin>("BoardSportsModel.FK_Rigs_Fins", "Fins").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Fin>("BoardSportsModel.FK_Rigs_Fins", "Fins").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Fin> FinReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Fin>("BoardSportsModel.FK_Rigs_Fins", "Fins");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Fin>("BoardSportsModel.FK_Rigs_Fins", "Fins", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BoardSportsModel", "FK_Rigs_Masts", "Masts")]
        public Mast Mast
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Mast>("BoardSportsModel.FK_Rigs_Masts", "Masts").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Mast>("BoardSportsModel.FK_Rigs_Masts", "Masts").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Mast> MastReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Mast>("BoardSportsModel.FK_Rigs_Masts", "Masts");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Mast>("BoardSportsModel.FK_Rigs_Masts", "Masts", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BoardSportsModel", "FK_Rigs_Sails", "Sails")]
        public Sail Sail
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Sail>("BoardSportsModel.FK_Rigs_Sails", "Sails").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Sail>("BoardSportsModel.FK_Rigs_Sails", "Sails").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Sail> SailReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Sail>("BoardSportsModel.FK_Rigs_Sails", "Sails");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Sail>("BoardSportsModel.FK_Rigs_Sails", "Sails", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BoardSportsModel", "FK_Rigs_Venues", "Venues")]
        public Venue Venue
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Venue>("BoardSportsModel.FK_Rigs_Venues", "Venues").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Venue>("BoardSportsModel.FK_Rigs_Venues", "Venues").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Venue> VenueReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Venue>("BoardSportsModel.FK_Rigs_Venues", "Venues");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Venue>("BoardSportsModel.FK_Rigs_Venues", "Venues", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BoardSportsModel", "FK_Sessions_Rigs", "Sessions")]
        public EntityCollection<Session> Sessions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Session>("BoardSportsModel.FK_Sessions_Rigs", "Sessions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Session>("BoardSportsModel.FK_Sessions_Rigs", "Sessions", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BoardSportsModel", Name="Sail")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Sail : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Sail object.
        /// </summary>
        /// <param name="sailId">Initial value of the SailId property.</param>
        /// <param name="sailName">Initial value of the SailName property.</param>
        /// <param name="size">Initial value of the Size property.</param>
        public static Sail CreateSail(global::System.Int32 sailId, global::System.String sailName, global::System.Decimal size)
        {
            Sail sail = new Sail();
            sail.SailId = sailId;
            sail.SailName = sailName;
            sail.Size = size;
            return sail;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SailId
        {
            get
            {
                return _SailId;
            }
            set
            {
                if (_SailId != value)
                {
                    OnSailIdChanging(value);
                    ReportPropertyChanging("SailId");
                    _SailId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SailId");
                    OnSailIdChanged();
                }
            }
        }
        private global::System.Int32 _SailId;
        partial void OnSailIdChanging(global::System.Int32 value);
        partial void OnSailIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SailName
        {
            get
            {
                return _SailName;
            }
            set
            {
                OnSailNameChanging(value);
                ReportPropertyChanging("SailName");
                _SailName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SailName");
                OnSailNameChanged();
            }
        }
        private global::System.String _SailName;
        partial void OnSailNameChanging(global::System.String value);
        partial void OnSailNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Manufacturer
        {
            get
            {
                return _Manufacturer;
            }
            set
            {
                OnManufacturerChanging(value);
                ReportPropertyChanging("Manufacturer");
                _Manufacturer = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Manufacturer");
                OnManufacturerChanged();
            }
        }
        private global::System.String _Manufacturer;
        partial void OnManufacturerChanging(global::System.String value);
        partial void OnManufacturerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> PurchaseDate
        {
            get
            {
                return _PurchaseDate;
            }
            set
            {
                OnPurchaseDateChanging(value);
                ReportPropertyChanging("PurchaseDate");
                _PurchaseDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PurchaseDate");
                OnPurchaseDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _PurchaseDate;
        partial void OnPurchaseDateChanging(Nullable<global::System.DateTime> value);
        partial void OnPurchaseDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> PurchasePrice
        {
            get
            {
                return _PurchasePrice;
            }
            set
            {
                OnPurchasePriceChanging(value);
                ReportPropertyChanging("PurchasePrice");
                _PurchasePrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PurchasePrice");
                OnPurchasePriceChanged();
            }
        }
        private Nullable<global::System.Decimal> _PurchasePrice;
        partial void OnPurchasePriceChanging(Nullable<global::System.Decimal> value);
        partial void OnPurchasePriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Condition
        {
            get
            {
                return _Condition;
            }
            set
            {
                OnConditionChanging(value);
                ReportPropertyChanging("Condition");
                _Condition = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Condition");
                OnConditionChanged();
            }
        }
        private global::System.String _Condition;
        partial void OnConditionChanging(global::System.String value);
        partial void OnConditionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Size
        {
            get
            {
                return _Size;
            }
            set
            {
                OnSizeChanging(value);
                ReportPropertyChanging("Size");
                _Size = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Size");
                OnSizeChanged();
            }
        }
        private global::System.Decimal _Size;
        partial void OnSizeChanging(global::System.Decimal value);
        partial void OnSizeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Byte> BoomLength
        {
            get
            {
                return _BoomLength;
            }
            set
            {
                OnBoomLengthChanging(value);
                ReportPropertyChanging("BoomLength");
                _BoomLength = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BoomLength");
                OnBoomLengthChanged();
            }
        }
        private Nullable<global::System.Byte> _BoomLength;
        partial void OnBoomLengthChanging(Nullable<global::System.Byte> value);
        partial void OnBoomLengthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> BaseLength
        {
            get
            {
                return _BaseLength;
            }
            set
            {
                OnBaseLengthChanging(value);
                ReportPropertyChanging("BaseLength");
                _BaseLength = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BaseLength");
                OnBaseLengthChanged();
            }
        }
        private Nullable<global::System.Int32> _BaseLength;
        partial void OnBaseLengthChanging(Nullable<global::System.Int32> value);
        partial void OnBaseLengthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PictureLocation
        {
            get
            {
                return _PictureLocation;
            }
            set
            {
                OnPictureLocationChanging(value);
                ReportPropertyChanging("PictureLocation");
                _PictureLocation = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PictureLocation");
                OnPictureLocationChanged();
            }
        }
        private global::System.String _PictureLocation;
        partial void OnPictureLocationChanging(global::System.String value);
        partial void OnPictureLocationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> YearManufactured
        {
            get
            {
                return _YearManufactured;
            }
            set
            {
                OnYearManufacturedChanging(value);
                ReportPropertyChanging("YearManufactured");
                _YearManufactured = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("YearManufactured");
                OnYearManufacturedChanged();
            }
        }
        private Nullable<global::System.Int32> _YearManufactured;
        partial void OnYearManufacturedChanging(Nullable<global::System.Int32> value);
        partial void OnYearManufacturedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BoardSportsModel", "FK_Rigs_Sails", "Rigs")]
        public EntityCollection<Rig> Rigs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Rig>("BoardSportsModel.FK_Rigs_Sails", "Rigs");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Rig>("BoardSportsModel.FK_Rigs_Sails", "Rigs", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BoardSportsModel", Name="Session")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Session : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Session object.
        /// </summary>
        /// <param name="sessionId">Initial value of the SessionId property.</param>
        /// <param name="sessionType">Initial value of the SessionType property.</param>
        /// <param name="sessionDate">Initial value of the SessionDate property.</param>
        /// <param name="rigId">Initial value of the RigId property.</param>
        public static Session CreateSession(global::System.Int32 sessionId, global::System.String sessionType, global::System.DateTime sessionDate, global::System.Int32 rigId)
        {
            Session session = new Session();
            session.SessionId = sessionId;
            session.SessionType = sessionType;
            session.SessionDate = sessionDate;
            session.RigId = rigId;
            return session;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SessionId
        {
            get
            {
                return _SessionId;
            }
            set
            {
                if (_SessionId != value)
                {
                    OnSessionIdChanging(value);
                    ReportPropertyChanging("SessionId");
                    _SessionId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SessionId");
                    OnSessionIdChanged();
                }
            }
        }
        private global::System.Int32 _SessionId;
        partial void OnSessionIdChanging(global::System.Int32 value);
        partial void OnSessionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SessionType
        {
            get
            {
                return _SessionType;
            }
            set
            {
                OnSessionTypeChanging(value);
                ReportPropertyChanging("SessionType");
                _SessionType = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SessionType");
                OnSessionTypeChanged();
            }
        }
        private global::System.String _SessionType;
        partial void OnSessionTypeChanging(global::System.String value);
        partial void OnSessionTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime SessionDate
        {
            get
            {
                return _SessionDate;
            }
            set
            {
                OnSessionDateChanging(value);
                ReportPropertyChanging("SessionDate");
                _SessionDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SessionDate");
                OnSessionDateChanged();
            }
        }
        private global::System.DateTime _SessionDate;
        partial void OnSessionDateChanging(global::System.DateTime value);
        partial void OnSessionDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SessionDescription
        {
            get
            {
                return _SessionDescription;
            }
            set
            {
                OnSessionDescriptionChanging(value);
                ReportPropertyChanging("SessionDescription");
                _SessionDescription = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SessionDescription");
                OnSessionDescriptionChanged();
            }
        }
        private global::System.String _SessionDescription;
        partial void OnSessionDescriptionChanging(global::System.String value);
        partial void OnSessionDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Duration
        {
            get
            {
                return _Duration;
            }
            set
            {
                OnDurationChanging(value);
                ReportPropertyChanging("Duration");
                _Duration = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Duration");
                OnDurationChanged();
            }
        }
        private Nullable<global::System.Decimal> _Duration;
        partial void OnDurationChanging(Nullable<global::System.Decimal> value);
        partial void OnDurationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Byte> Funfactor
        {
            get
            {
                return _Funfactor;
            }
            set
            {
                OnFunfactorChanging(value);
                ReportPropertyChanging("Funfactor");
                _Funfactor = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Funfactor");
                OnFunfactorChanged();
            }
        }
        private Nullable<global::System.Byte> _Funfactor;
        partial void OnFunfactorChanging(Nullable<global::System.Byte> value);
        partial void OnFunfactorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RigId
        {
            get
            {
                return _RigId;
            }
            set
            {
                OnRigIdChanging(value);
                ReportPropertyChanging("RigId");
                _RigId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RigId");
                OnRigIdChanged();
            }
        }
        private global::System.Int32 _RigId;
        partial void OnRigIdChanging(global::System.Int32 value);
        partial void OnRigIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> BeersConsumed
        {
            get
            {
                return _BeersConsumed;
            }
            set
            {
                OnBeersConsumedChanging(value);
                ReportPropertyChanging("BeersConsumed");
                _BeersConsumed = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BeersConsumed");
                OnBeersConsumedChanged();
            }
        }
        private Nullable<global::System.Int32> _BeersConsumed;
        partial void OnBeersConsumedChanging(Nullable<global::System.Int32> value);
        partial void OnBeersConsumedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PeopleInCompany
        {
            get
            {
                return _PeopleInCompany;
            }
            set
            {
                OnPeopleInCompanyChanging(value);
                ReportPropertyChanging("PeopleInCompany");
                _PeopleInCompany = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PeopleInCompany");
                OnPeopleInCompanyChanged();
            }
        }
        private Nullable<global::System.Int32> _PeopleInCompany;
        partial void OnPeopleInCompanyChanging(Nullable<global::System.Int32> value);
        partial void OnPeopleInCompanyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Notes
        {
            get
            {
                return _Notes;
            }
            set
            {
                OnNotesChanging(value);
                ReportPropertyChanging("Notes");
                _Notes = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Notes");
                OnNotesChanged();
            }
        }
        private global::System.String _Notes;
        partial void OnNotesChanging(global::System.String value);
        partial void OnNotesChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BoardSportsModel", "FK_Sessions_Rigs", "Rigs")]
        public Rig Rig
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Rig>("BoardSportsModel.FK_Sessions_Rigs", "Rigs").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Rig>("BoardSportsModel.FK_Sessions_Rigs", "Rigs").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Rig> RigReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Rig>("BoardSportsModel.FK_Sessions_Rigs", "Rigs");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Rig>("BoardSportsModel.FK_Sessions_Rigs", "Rigs", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BoardSportsModel", Name="Snowboard")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Snowboard : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Snowboard object.
        /// </summary>
        /// <param name="snowboardId">Initial value of the SnowboardId property.</param>
        /// <param name="snowboardName">Initial value of the SnowboardName property.</param>
        public static Snowboard CreateSnowboard(global::System.Int32 snowboardId, global::System.String snowboardName)
        {
            Snowboard snowboard = new Snowboard();
            snowboard.SnowboardId = snowboardId;
            snowboard.SnowboardName = snowboardName;
            return snowboard;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SnowboardId
        {
            get
            {
                return _SnowboardId;
            }
            set
            {
                if (_SnowboardId != value)
                {
                    OnSnowboardIdChanging(value);
                    ReportPropertyChanging("SnowboardId");
                    _SnowboardId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SnowboardId");
                    OnSnowboardIdChanged();
                }
            }
        }
        private global::System.Int32 _SnowboardId;
        partial void OnSnowboardIdChanging(global::System.Int32 value);
        partial void OnSnowboardIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SnowboardName
        {
            get
            {
                return _SnowboardName;
            }
            set
            {
                OnSnowboardNameChanging(value);
                ReportPropertyChanging("SnowboardName");
                _SnowboardName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SnowboardName");
                OnSnowboardNameChanged();
            }
        }
        private global::System.String _SnowboardName;
        partial void OnSnowboardNameChanging(global::System.String value);
        partial void OnSnowboardNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Manufacturer
        {
            get
            {
                return _Manufacturer;
            }
            set
            {
                OnManufacturerChanging(value);
                ReportPropertyChanging("Manufacturer");
                _Manufacturer = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Manufacturer");
                OnManufacturerChanged();
            }
        }
        private global::System.String _Manufacturer;
        partial void OnManufacturerChanging(global::System.String value);
        partial void OnManufacturerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> PurchaseDate
        {
            get
            {
                return _PurchaseDate;
            }
            set
            {
                OnPurchaseDateChanging(value);
                ReportPropertyChanging("PurchaseDate");
                _PurchaseDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PurchaseDate");
                OnPurchaseDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _PurchaseDate;
        partial void OnPurchaseDateChanging(Nullable<global::System.DateTime> value);
        partial void OnPurchaseDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> PurchasePrice
        {
            get
            {
                return _PurchasePrice;
            }
            set
            {
                OnPurchasePriceChanging(value);
                ReportPropertyChanging("PurchasePrice");
                _PurchasePrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PurchasePrice");
                OnPurchasePriceChanged();
            }
        }
        private Nullable<global::System.Decimal> _PurchasePrice;
        partial void OnPurchasePriceChanging(Nullable<global::System.Decimal> value);
        partial void OnPurchasePriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> EstimatedPrice
        {
            get
            {
                return _EstimatedPrice;
            }
            set
            {
                OnEstimatedPriceChanging(value);
                ReportPropertyChanging("EstimatedPrice");
                _EstimatedPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EstimatedPrice");
                OnEstimatedPriceChanged();
            }
        }
        private Nullable<global::System.Decimal> _EstimatedPrice;
        partial void OnEstimatedPriceChanging(Nullable<global::System.Decimal> value);
        partial void OnEstimatedPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Byte> Length
        {
            get
            {
                return _Length;
            }
            set
            {
                OnLengthChanging(value);
                ReportPropertyChanging("Length");
                _Length = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Length");
                OnLengthChanged();
            }
        }
        private Nullable<global::System.Byte> _Length;
        partial void OnLengthChanging(Nullable<global::System.Byte> value);
        partial void OnLengthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Byte> Width
        {
            get
            {
                return _Width;
            }
            set
            {
                OnWidthChanging(value);
                ReportPropertyChanging("Width");
                _Width = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Width");
                OnWidthChanged();
            }
        }
        private Nullable<global::System.Byte> _Width;
        partial void OnWidthChanging(Nullable<global::System.Byte> value);
        partial void OnWidthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Bindings
        {
            get
            {
                return _Bindings;
            }
            set
            {
                OnBindingsChanging(value);
                ReportPropertyChanging("Bindings");
                _Bindings = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Bindings");
                OnBindingsChanged();
            }
        }
        private global::System.String _Bindings;
        partial void OnBindingsChanging(global::System.String value);
        partial void OnBindingsChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BoardSportsModel", Name="Venue")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Venue : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Venue object.
        /// </summary>
        /// <param name="venueId">Initial value of the VenueId property.</param>
        /// <param name="venueName">Initial value of the VenueName property.</param>
        public static Venue CreateVenue(global::System.Int32 venueId, global::System.String venueName)
        {
            Venue venue = new Venue();
            venue.VenueId = venueId;
            venue.VenueName = venueName;
            return venue;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 VenueId
        {
            get
            {
                return _VenueId;
            }
            set
            {
                if (_VenueId != value)
                {
                    OnVenueIdChanging(value);
                    ReportPropertyChanging("VenueId");
                    _VenueId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("VenueId");
                    OnVenueIdChanged();
                }
            }
        }
        private global::System.Int32 _VenueId;
        partial void OnVenueIdChanging(global::System.Int32 value);
        partial void OnVenueIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String VenueName
        {
            get
            {
                return _VenueName;
            }
            set
            {
                OnVenueNameChanging(value);
                ReportPropertyChanging("VenueName");
                _VenueName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("VenueName");
                OnVenueNameChanged();
            }
        }
        private global::System.String _VenueName;
        partial void OnVenueNameChanging(global::System.String value);
        partial void OnVenueNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PictureLocation
        {
            get
            {
                return _PictureLocation;
            }
            set
            {
                OnPictureLocationChanging(value);
                ReportPropertyChanging("PictureLocation");
                _PictureLocation = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PictureLocation");
                OnPictureLocationChanged();
            }
        }
        private global::System.String _PictureLocation;
        partial void OnPictureLocationChanging(global::System.String value);
        partial void OnPictureLocationChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BoardSportsModel", "FK_Rigs_Venues", "Rigs")]
        public EntityCollection<Rig> Rigs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Rig>("BoardSportsModel.FK_Rigs_Venues", "Rigs");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Rig>("BoardSportsModel.FK_Rigs_Venues", "Rigs", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
